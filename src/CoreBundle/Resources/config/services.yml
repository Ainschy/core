services:
    metamodels.assets.icon_builder:
        class: MetaModels\CoreBundle\Assets\IconBuilder
        arguments:
            - "@=service('contao.framework').getAdapter('Contao\\\\FilesModel')"
            - "@contao.image.image_factory"
            - "%kernel.project_dir%"
            - "%metamodels.assets_dir%"
            - "%metamodels.assets_web%"
            - "@=service('contao.framework').getAdapter('Contao\\\\Image')"

    metamodels.cache:
        class: Doctrine\Common\Cache\FilesystemCache
        arguments:
            - "%metamodels.cache_dir%"
        public: true

    metamodels.cache.purger:
        class: MetaModels\BackendIntegration\PurgeCache
        arguments:
            - "%metamodels.cache_dir%"
            - "@logger"

    metamodels.factory:
        arguments:
            - "@event_dispatcher"
        class: MetaModels\Factory
        public: true

    metamodels.attribute_factory:
        class: MetaModels\Attribute\AttributeFactory
        arguments:
          - "@event_dispatcher"
        public: true

    metamodels.filter_setting_factory:
        class: MetaModels\Filter\Setting\FilterSettingFactory
        arguments:
          - "@database_connection"
          - "@event_dispatcher"
          - "@metamodels.factory"
        public: true

    metamodels.render_setting_factory:
        class: MetaModels\Render\Setting\RenderSettingFactory
        arguments:
          - "@database_connection"
          - "@event_dispatcher"
        public: true

    metamodels.template_list:
        class: MetaModels\BackendIntegration\TemplateList
        arguments:
          - "@database_connection"
          - "%contao.resources_paths%"
          - "%kernel.project_dir%"

    metamodels.insert_tags:
        class: Contao\InsertTags

    metamodels.table_manipulator:
        class: MetaModels\Helper\TableManipulator
        arguments:
          - "@database_connection"
          - "%metamodels.system_columns%"
        public: true

    metamodels.backend.navigation_builder:
        class: MetaModels\CoreBundle\Contao\Hooks\RegisterBackendNavigation
        arguments:
            - "@contao.translation.translator"
            - "@request_stack"
            - "@router"
            - "@metamodels.view_combination"
        # it is used as HOOK from Contao - needs to be public therefore.
        public: true

    metamodels.backend.url-builder-factory:
        class: ContaoCommunityAlliance\UrlBuilder\Contao\CsrfUrlBuilderFactory
        arguments:
            - '@security.csrf.token_manager'
            - '%contao.csrf_token_name%'

    metamodels.datacontainer_loader:
        class: MetaModels\CoreBundle\Contao\Hooks\LoadDataContainer
        arguments:
            - "@metamodels.factory"
            - "@metamodels.view_combination"
            - "@=service('contao.framework').getAdapter('Contao\\\\Controller')"
            - "@metamodels.assets.icon_builder"
        public: true

    metamodels.controller.abstract.add_all:
        abstract: true
        arguments:
            - "@templating"
            - "@contao.translation.translator"
            - "@metamodels.factory"
            - "@database_connection"
            - "@=service('contao.framework').getAdapter('Contao\\\\System')"
    metamodels.controller.inputscreen.add_all:
        class: MetaModels\CoreBundle\Controller\Backend\InputScreenAddAllController
        parent: metamodels.controller.abstract.add_all
    metamodels.controller.rendersetting.add_all:
        class: MetaModels\CoreBundle\Controller\Backend\RenderSettingAddAllController
        parent: metamodels.controller.abstract.add_all

    metamodels.controller.support_screen:
        class: MetaModels\CoreBundle\Controller\Backend\SupportMetaModelsController
        arguments:
            - "@templating"
            - "@contao.translation.translator"
            - "%metamodels.resource_dir%/data/contributors-github.json"
            - "%metamodels.resource_dir%/data/contributors-transifex.json"

    metamodels.controller.picker:
        class: MetaModels\CoreBundle\Controller\Backend\PickerWidgetController
        arguments:
            - "@templating"
            - "@contao.translation.translator"

    metamodels.view_combination.builder:
        class: MetaModels\ViewCombination\ViewCombinationBuilder
        arguments:
            - "@database_connection"
            - "@metamodels.factory"

    metamodels.view_combination.input_screen_information_builder:
        class: MetaModels\ViewCombination\InputScreenInformationBuilder
        arguments:
            - "@database_connection"
            - "@metamodels.factory"

    metamodels.view_combination:
        class: MetaModels\ViewCombination\ViewCombination
        arguments:
            - "@metamodels.cache"
            - "@security.token_storage"
            - "@metamodels.view_combination.builder"
            - "@metamodels.view_combination.input_screen_information_builder"

    MetaModels\MetaModelsServiceContainer:
        deprecated: 'The service "%service_id%" is deprecated and to be removed in MetaModels 3 - inject needed services directly.'
        configurator: 'MetaModels\CoreBundle\LegacyCompat\ServiceContainerInitializer:configure'
        public: true

    MetaModels\CoreBundle\LegacyCompat\ServiceContainerInitializer:
        arguments:
            - '@service_container'
